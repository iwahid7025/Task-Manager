namespace TaskApi.Models;

/// <summary>
/// Enumeration representing the different states a task can be in.
/// Values are explicitly assigned integers for database storage consistency.
/// </summary>
public enum Status
{
    /// <summary>
    /// Task is planned but not yet started (default state for new tasks)
    /// </summary>
    Todo = 0,

    /// <summary>
    /// Task is currently being worked on
    /// </summary>
    InProgress = 1,

    /// <summary>
    /// Task has been completed successfully
    /// </summary>
    Done = 2
}

/// <summary>
/// Entity model representing a task item in the task management system.
/// This class maps directly to the Tasks table in the SQLite database.
/// Contains all the core properties needed to track and manage individual tasks.
/// </summary>
public class TaskItem
{
    /// <summary>
    /// Unique identifier for the task. Serves as the primary key in the database.
    /// Auto-generated by the database using IDENTITY column.
    /// </summary>
    public int Id { get; set; }

    /// <summary>
    /// The main title/name of the task. This is a required field.
    /// Maximum length is 200 characters as enforced by database constraints.
    /// Initialized with empty string to avoid null reference issues.
    /// </summary>
    public string Title { get; set; } = "";

    /// <summary>
    /// Optional detailed description of the task.
    /// Can contain additional context, notes, or requirements for the task.
    /// Nullable to indicate this field is optional.
    /// </summary>
    public string? Description { get; set; }

    /// <summary>
    /// Current status/state of the task using the Status enumeration.
    /// Defaults to Todo when a new task is created.
    /// Stored as an integer in the database for efficiency.
    /// </summary>
    public Status Status { get; set; } = Status.Todo;
}